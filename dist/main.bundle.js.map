{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;ACjBQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+CAAM;AAChD;AACA;AACA,CAAC;AACD,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC1BS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4DAA4D,mCAAmC;AAC/F;AACA,6BAA6B,+CAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;AC/FtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gCAAgC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;AC5D5B,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;ACpN7B,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACqC;AACE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAK;AACjC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uDAAM;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,sBAAsB;AAC1G;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,4DAA4D,wBAAwB;AACpF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,IAAI,EAAC;;;;;;;UC9bpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNgD;AACE;AAClB;AAChC,uBAAuB,2DAAY;AACnC,wBAAwB,4DAAa;AACrC,IAAI,mDAAI","sources":["webpack:///./src/objects/Bullet.ts","webpack:///./src/objects/Enemy.ts","webpack:///./src/objects/Player.ts","webpack:///./src/utils/AudioManager.ts","webpack:///./src/utils/CanvasManager.ts","webpack:///./src/utils/Game.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/index.ts"],"sourcesContent":["var Bullet = /** @class */ (function () {\r\n    function Bullet(graphic, vector, type, x, y) {\r\n        this.BULLET_WIDTH = 2;\r\n        this.BULLET_HEIGHT = 15;\r\n        this.graphic = graphic;\r\n        this.vector = vector;\r\n        this.type = type;\r\n        this.x = x;\r\n        this.y = y;\r\n        if (this.graphic != 7)\r\n            this.BULLET_WIDTH = 10;\r\n    }\r\n    Bullet.prototype.updatePosition = function () {\r\n        this.y += this.vector;\r\n    };\r\n    return Bullet;\r\n}());\r\nexport default Bullet;\r\n","import Bullet from \"./Bullet\";\r\nvar Enemy = /** @class */ (function () {\r\n    function Enemy(graphic, x, y, id, vector, game) {\r\n        this.shootProbabilty = 1;\r\n        this.graphic = graphic;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.id = id;\r\n        this.game = game;\r\n        this.vector = vector;\r\n        if (this.graphic == 0)\r\n            this.vector = 10;\r\n    }\r\n    Enemy.prototype.updatePosition = function () {\r\n        this.x += this.vector;\r\n    };\r\n    Enemy.prototype.pushDown = function () {\r\n        this.y += 10;\r\n    };\r\n    Enemy.prototype.shoot = function () {\r\n        var x = Math.floor(Math.random() * 100000);\r\n        if (this.shootProbabilty >= x)\r\n            this.game.bulletList.push(new Bullet(this.graphic + 8, 5, \"enemy\", this.x + 12.5, this.y + 25));\r\n    };\r\n    return Enemy;\r\n}());\r\nexport default Enemy;\r\n","import Bullet from \"./Bullet\";\r\nvar Player = /** @class */ (function () {\r\n    function Player(canvasManager, audioManager, game) {\r\n        var _this = this;\r\n        this.PLAYER_GRAPHIC = 4;\r\n        this.MOVE_VELOCITY = 3;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.canvasManager = canvasManager;\r\n        this.audioManager = audioManager;\r\n        this.audioPlayer = document.getElementById(\"audio1\");\r\n        this.audioManager.load(\"shoot\", this.audioPlayer);\r\n        this.game = game;\r\n        this.PLAYER_HEIGHT = this.canvasManager.getCanvasHeight() * 0.05;\r\n        this.PLAYER_WIDTH = this.canvasManager.getCanvasWidth() * 0.0375;\r\n        var keyPressed = [false, false, false];\r\n        document.addEventListener(\"keydown\", function (e) {\r\n            // const keyName: string = e.key\r\n            // switch (keyName) {\r\n            //     case \"ArrowLeft\":\r\n            //         keyPressed[0] = true;\r\n            //         break\r\n            //     case \"ArrowRight\":\r\n            //         keyPressed[1] = true\r\n            //         break\r\n            //     case \" \":\r\n            //         keyPressed[2] = true\r\n            //         break\r\n            // }\r\n            // if (keyPressed[0] && keyPressed[2]) {\r\n            //     if (this.x - this.MOVE_VELOCITY >= 0) this.move(-this.MOVE_VELOCITY)\r\n            //     this.shoot()\r\n            // } else if (keyPressed[1] && keyPressed[2]) {\r\n            //     if (this.x + this.MOVE_VELOCITY + this.PLAYER_WIDTH <= this.canvasManager.getCanvasWidth()) this.move(this.MOVE_VELOCITY)\r\n            //     this.shoot()\r\n            // } else if (keyPressed[0]) {\r\n            //     if (this.x - this.MOVE_VELOCITY >= 0) this.move(-this.MOVE_VELOCITY)\r\n            // } else if (keyPressed[1]) {\r\n            //     if (this.x + this.MOVE_VELOCITY + this.PLAYER_WIDTH <= this.canvasManager.getCanvasWidth()) this.move(this.MOVE_VELOCITY)\r\n            // } else if (keyPressed[2]) {\r\n            //     this.shoot()\r\n            // }\r\n            if (e.key == \" \") {\r\n                _this.shoot();\r\n            }\r\n            else if (e.key == \"ArrowLeft\") {\r\n                if (_this.x - _this.MOVE_VELOCITY >= 0)\r\n                    _this.moveLeft = true;\r\n                else\r\n                    _this.moveLeft = false;\r\n            }\r\n            else if (e.key == \"ArrowRight\") {\r\n                if (_this.x + _this.MOVE_VELOCITY + _this.PLAYER_WIDTH <=\r\n                    _this.canvasManager.getCanvasWidth())\r\n                    _this.moveRight = true;\r\n                else\r\n                    _this.moveRight = false;\r\n            }\r\n        });\r\n        document.addEventListener(\"keyup\", function (e) {\r\n            if (e.key == \"ArrowLeft\")\r\n                _this.moveLeft = false;\r\n            else if (e.key == \"ArrowRight\")\r\n                _this.moveRight = false;\r\n        });\r\n        document.addEventListener(\"keyup\", function (e) {\r\n            var keyName = e.key;\r\n            switch (keyName) {\r\n                case \"ArrowLeft\":\r\n                    keyPressed[0] = false;\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    keyPressed[1] = false;\r\n                    break;\r\n                case \" \":\r\n                    keyPressed[2] = false;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    Player.prototype.shoot = function () {\r\n        if (!this.game.bulletList.some(function (element) { return element.type === \"player\"; }) &&\r\n            this.game.isPlaying) {\r\n            var bullet = new Bullet(7, -10, \"player\", this.x + 0.5 * this.PLAYER_WIDTH, this.canvasManager.getCanvasHeight() -\r\n                2.75 * this.canvasManager.FONTSIZE -\r\n                this.PLAYER_HEIGHT);\r\n            this.game.bulletList.push(bullet);\r\n            this.audioManager.play(this.audioPlayer);\r\n        }\r\n    };\r\n    Player.prototype.move = function (x) {\r\n        this.x += x;\r\n    };\r\n    return Player;\r\n}());\r\nexport default Player;\r\n","var AudioManager = /** @class */ (function () {\r\n    function AudioManager() {\r\n        this.soundList = [\r\n            {\r\n                shortName: \"explosion\",\r\n                url: \"../src/sounds_and_visuals/sounds/explosion/explosion.wav\",\r\n            },\r\n            {\r\n                shortName: \"fastInvader1\",\r\n                url: \"../src/sounds_and_visuals/sounds/fastinvader1/fastinvader1.wav\",\r\n            },\r\n            {\r\n                shortName: \"fastInvader2\",\r\n                url: \"../src/sounds_and_visuals/sounds/fastinvader2/fastinvader2.wav\",\r\n            },\r\n            {\r\n                shortName: \"fastInvader3\",\r\n                url: \"../src/sounds_and_visuals/sounds/fastinvader3/fastinvader3.wav\",\r\n            },\r\n            {\r\n                shortName: \"fastInvader4\",\r\n                url: \"../src/sounds_and_visuals/sounds/fastinvader4/fastinvader4.wav\",\r\n            },\r\n            {\r\n                shortName: \"invaderKilled\",\r\n                url: \"../src/sounds_and_visuals/sounds/invaderkilled/invaderkilled.wav\",\r\n            },\r\n            {\r\n                shortName: \"shoot\",\r\n                url: \"../src/sounds_and_visuals/sounds/shoot/shoot.wav\",\r\n            },\r\n            {\r\n                shortName: \"coolMusic\",\r\n                url: \"../src/sounds_and_visuals/sounds/spaceinvaders1_mpeg/spaceinvaders1.mpeg\",\r\n            },\r\n            {\r\n                shortName: \"ufoHighPitch\",\r\n                url: \"../src/sounds_and_visuals/sounds/ufo_highpitch/ufo_highpitch.wav\",\r\n            },\r\n            {\r\n                shortName: \"ufoLowPitch\",\r\n                url: \"../src/sounds_and_visuals/sounds/ufo_lowpitch/ufo_lowpitch.wav\",\r\n            },\r\n        ];\r\n    }\r\n    AudioManager.prototype.play = function (audio) {\r\n        audio.play();\r\n    };\r\n    AudioManager.prototype.pause = function (audio) {\r\n        audio.pause();\r\n    };\r\n    AudioManager.prototype.load = function (name, audio) {\r\n        var currentSong = this.soundList.filter(function (elem) { return elem.shortName == name; });\r\n        audio.src = currentSong[0].url;\r\n    };\r\n    AudioManager.prototype.restart = function (audio) {\r\n        audio.currentTime = 0;\r\n    };\r\n    return AudioManager;\r\n}());\r\nexport default AudioManager;\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar CanvasManager = /** @class */ (function () {\r\n    function CanvasManager() {\r\n        this.canvas = document.getElementById(\"canvas\");\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.FONTSIZE = 20;\r\n        this.STANDARD_ENEMY_SIZE = 25;\r\n        this.imageList = [\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_red.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_pink.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_green.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_blue.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/player.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-shield/shield.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-animation/animation.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/player_bullet.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_red_bullet.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_pink_bullet.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_green_bullet.png',\r\n            '../src/sounds_and_visuals/graphics/space-invaders-characters/enemy_blue_bullet.png',\r\n        ];\r\n        this.texturesList = [];\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.ctx.fillStyle = 'white';\r\n        this.ctx.font = this.FONTSIZE + \"px Space Invaders\";\r\n        this.ctx.strokeStyle = '#00fc00';\r\n        this.canvas.setAttribute('crossOrigin', '');\r\n        this.ctx.imageSmoothingEnabled = false;\r\n    }\r\n    CanvasManager.prototype.displayScore = function (score, highestScore) {\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(0, this.FONTSIZE, this.canvas.width, this.FONTSIZE);\r\n        this.ctx.fillStyle = 'white';\r\n        this.ctx.fillText(\"score<1>\", this.FONTSIZE / 2, this.FONTSIZE);\r\n        this.ctx.fillText(\"hi-score\", this.canvas.width / 2 - (this.ctx.measureText(\"hi-score\").width) / 2, this.FONTSIZE);\r\n        this.ctx.fillText(\"score<2>\", this.canvas.width - (this.FONTSIZE / 2) - this.ctx.measureText(\"score<2>\").width, this.FONTSIZE);\r\n        switch (score.toString().length) {\r\n            case 1:\r\n                this.ctx.fillText(\"00\" + score.toString() + \" \", this.FONTSIZE / 2, this.FONTSIZE * 2);\r\n                break;\r\n            case 2:\r\n                this.ctx.fillText(\"0\" + score.toString() + \" \", this.FONTSIZE / 2, this.FONTSIZE * 2);\r\n                break;\r\n            default:\r\n                this.ctx.fillText(score.toString() + \" \", this.FONTSIZE / 2, this.FONTSIZE * 2);\r\n                break;\r\n        }\r\n        switch (highestScore.toString().length) {\r\n            case 1:\r\n                this.ctx.fillText(\"00\" + highestScore.toString() + \" \", this.canvas.width / 2 - (this.ctx.measureText(\"00\" + highestScore.toString() + \" \").width) / 2, this.FONTSIZE * 2);\r\n                break;\r\n            case 2:\r\n                this.ctx.fillText(\"0\" + highestScore.toString() + \" \", this.canvas.width / 2 - (this.ctx.measureText(\"0\" + highestScore.toString() + \" \").width) / 2, this.FONTSIZE * 2);\r\n                break;\r\n            default:\r\n                this.ctx.fillText(highestScore.toString() + \" \", this.canvas.width / 2 - (this.ctx.measureText(highestScore.toString()).width) / 2, this.FONTSIZE * 2);\r\n                break;\r\n        }\r\n        this.ctx.fillText(\"000\", this.canvas.width - this.FONTSIZE / 2 - this.ctx.measureText(\"000\").width, this.FONTSIZE * 2);\r\n    };\r\n    CanvasManager.prototype.displayBottom = function (lives, reset) {\r\n        var _this = this;\r\n        if (reset === void 0) { reset = false; }\r\n        var image;\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(0, this.canvas.height - this.FONTSIZE * 2.75 + 2, this.canvas.width, this.canvas.height);\r\n        this.ctx.fillStyle = 'white';\r\n        this.ctx.fillText(lives.toString(), this.FONTSIZE / 2, this.canvas.height - this.FONTSIZE);\r\n        var _loop_1 = function (i) {\r\n            image = new Image();\r\n            image.width = 3 * this_1.FONTSIZE;\r\n            image.height = 2 * this_1.FONTSIZE;\r\n            image.onload = function () {\r\n                _this.ctx.drawImage(image, _this.FONTSIZE + 10 + i * (image.width + 10), _this.canvas.height - image.height - 10, image.width, image.height);\r\n            };\r\n            image.src = '../src/sounds_and_visuals/graphics/space-invaders-characters/player.png';\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < lives; i++) {\r\n            _loop_1(i);\r\n        }\r\n        this.ctx.fillText(\"credit 00\", this.canvas.width - this.FONTSIZE - this.ctx.measureText(\"credit 00\").width, this.canvas.height - this.FONTSIZE);\r\n        if (reset) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(0, this.canvas.height - 2.75 * this.FONTSIZE);\r\n            this.ctx.lineTo(this.canvas.width, this.canvas.height - 2.75 * this.FONTSIZE);\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.stroke();\r\n        }\r\n    };\r\n    CanvasManager.prototype.displayObject = function (id, posX, posY, height, width) {\r\n        if (height === void 0) { height = this.STANDARD_ENEMY_SIZE; }\r\n        if (width === void 0) { width = this.STANDARD_ENEMY_SIZE; }\r\n        this.ctx.drawImage(this.texturesList[id], posX, posY, width, height);\r\n    };\r\n    CanvasManager.prototype.displayDefeatScreen = function () {\r\n        this.clearZone(0, this.FONTSIZE * 2, this.getCanvasWidth(), this.getCanvasHeight() - (4 * this.FONTSIZE));\r\n        this.ctx.fillStyle = 'white';\r\n        this.ctx.font = '40px Space Invaders';\r\n        this.ctx.fillText('Game Over', (this.getCanvasWidth() - this.getTextWidth('Game Over')) / 2, this.getCanvasHeight() / 2 - this.getTextHeight('Game Over'));\r\n        this.ctx.font = this.FONTSIZE + \"px Space Invaders\";\r\n        this.ctx.fillText('Press <backspace> to restart', (this.getCanvasWidth() - this.getTextWidth('Press <backspace> to restart')) / 2, this.getCanvasHeight() / 2 + (this.getTextHeight('Game Over') * 2));\r\n    };\r\n    CanvasManager.prototype.clearAlienZone = function () {\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(0, this.FONTSIZE * 2, this.getCanvasWidth(), this.getCanvasHeight() * 0.75 - this.getTextHeight('hi-score') - this.getTextHeight('000'));\r\n    };\r\n    CanvasManager.prototype.clearPlayerZone = function () {\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(0, this.canvas.height - 2.75 * this.FONTSIZE - this.getCanvasWidth() * 0.0375, this.getCanvasWidth(), this.getCanvasWidth() * 0.0375);\r\n    };\r\n    CanvasManager.prototype.clearZone = function (x, y, width, height) {\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(x, y, width, height);\r\n    };\r\n    CanvasManager.prototype.loadTexture = function (src) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var image = new Image();\r\n                        image.onload = function () {\r\n                            image.crossOrigin = null;\r\n                            _this.texturesList.push(image);\r\n                            resolve();\r\n                        };\r\n                        image.src = src;\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    CanvasManager.prototype.loadAll = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _i, _a, element;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _i = 0, _a = this.imageList;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\r\n                        element = _a[_i];\r\n                        return [4 /*yield*/, this.loadTexture(element)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CanvasManager.prototype.getCanvasHeight = function () {\r\n        return this.canvas.height;\r\n    };\r\n    CanvasManager.prototype.getCanvasWidth = function () {\r\n        return this.canvas.width;\r\n    };\r\n    CanvasManager.prototype.getTextHeight = function (text) {\r\n        return Math.abs(this.ctx.measureText(text).actualBoundingBoxAscent) + Math.abs(this.ctx.measureText(text).actualBoundingBoxDescent);\r\n    };\r\n    CanvasManager.prototype.getTextWidth = function (text) {\r\n        return this.ctx.measureText(text).width;\r\n    };\r\n    CanvasManager.prototype.getImageData = function (x, y, width, height) {\r\n        return this.ctx.getImageData(x, y, width, height);\r\n    };\r\n    CanvasManager.prototype.putImageData = function (imageData, x, y) {\r\n        this.ctx.putImageData(imageData, x, y);\r\n    };\r\n    return CanvasManager;\r\n}());\r\nexport default CanvasManager;\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport Enemy from \"../objects/Enemy\";\r\nimport Player from \"../objects/Player\";\r\n// import SpecialEnemy from \"../objects/SpecialEnemy\";\r\nvar Game = /** @class */ (function () {\r\n    function Game(canvasManager, audioManager) {\r\n        this.highestScore = 0;\r\n        this.score = 0;\r\n        this.lives = 3;\r\n        this.enemiesList = [];\r\n        this.bulletList = [];\r\n        this.isPlaying = false;\r\n        this.displayCounter = 0;\r\n        this.isDefeat = false;\r\n        this.counter = 0;\r\n        this.enemyVecSetter = 1;\r\n        this.ENEMY_BOOST = 0.05;\r\n        this.audioPlayer1 = document.getElementById(\"audio2\");\r\n        this.audioPlayer2 = document.getElementById(\"audio3\");\r\n        this.audioManager = audioManager;\r\n        this.audioManager.load(\"explosion\", this.audioPlayer1);\r\n        this.audioManager.load(\"coolMusic\", this.audioPlayer2);\r\n        this.start(canvasManager);\r\n    }\r\n    Game.prototype.displayEnemies = function () {\r\n        for (var _i = 0, _a = this.enemiesList; _i < _a.length; _i++) {\r\n            var element = _a[_i];\r\n            this.canvasManager.displayObject(element.graphic, element.x, element.y);\r\n        }\r\n    };\r\n    Game.prototype.displayEnemiesDefault = function () {\r\n        var _this = this;\r\n        this.enemiesList.forEach(function (element, i) {\r\n            setTimeout(function () {\r\n                _this.canvasManager.displayObject(element.graphic, element.x, element.y);\r\n                _this.displayCounter++;\r\n            }, 50 * i);\r\n        });\r\n    };\r\n    Game.prototype.setEnemiesList = function () {\r\n        var _this = this;\r\n        var x;\r\n        var y;\r\n        var graphic;\r\n        Array(50)\r\n            .fill(0)\r\n            .forEach(function (_element, i) {\r\n            if (i < 10) {\r\n                graphic = 3;\r\n                y =\r\n                    _this.canvasManager.getTextHeight(\"score<1>\") +\r\n                        _this.canvasManager.getTextHeight(\"000\") +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE * 2;\r\n                x =\r\n                    _this.canvasManager.getCanvasWidth() / 2 +\r\n                        i * _this.canvasManager.STANDARD_ENEMY_SIZE * 2.5 -\r\n                        5 * _this.canvasManager.STANDARD_ENEMY_SIZE * 2.5 +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE;\r\n            }\r\n            else if (i < 20) {\r\n                graphic = 1;\r\n                y =\r\n                    _this.canvasManager.getTextHeight(\"score<1>\") +\r\n                        _this.canvasManager.getTextHeight(\"000\") +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE * 4;\r\n                x =\r\n                    _this.canvasManager.getCanvasWidth() / 2 +\r\n                        (i - 10) *\r\n                            _this.canvasManager.STANDARD_ENEMY_SIZE *\r\n                            2.5 -\r\n                        5 * _this.canvasManager.STANDARD_ENEMY_SIZE * 2.5 +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE;\r\n            }\r\n            else if (i < 30) {\r\n                graphic = 1;\r\n                y =\r\n                    _this.canvasManager.getTextHeight(\"score<1>\") +\r\n                        _this.canvasManager.getTextHeight(\"000\") +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE * 6;\r\n                x =\r\n                    _this.canvasManager.getCanvasWidth() / 2 +\r\n                        (i - 20) *\r\n                            _this.canvasManager.STANDARD_ENEMY_SIZE *\r\n                            2.5 -\r\n                        5 * _this.canvasManager.STANDARD_ENEMY_SIZE * 2.5 +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE;\r\n            }\r\n            else if (i < 40) {\r\n                graphic = 2;\r\n                y =\r\n                    _this.canvasManager.getTextHeight(\"score<1>\") +\r\n                        _this.canvasManager.getTextHeight(\"000\") +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE * 8;\r\n                x =\r\n                    _this.canvasManager.getCanvasWidth() / 2 +\r\n                        (i - 30) *\r\n                            _this.canvasManager.STANDARD_ENEMY_SIZE *\r\n                            2.5 -\r\n                        5 * _this.canvasManager.STANDARD_ENEMY_SIZE * 2.5 +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE;\r\n            }\r\n            else {\r\n                graphic = 2;\r\n                y =\r\n                    _this.canvasManager.getTextHeight(\"score<1>\") +\r\n                        _this.canvasManager.getTextHeight(\"000\") +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE * 10;\r\n                x =\r\n                    _this.canvasManager.getCanvasWidth() / 2 +\r\n                        (i - 40) *\r\n                            _this.canvasManager.STANDARD_ENEMY_SIZE *\r\n                            2.5 -\r\n                        5 * _this.canvasManager.STANDARD_ENEMY_SIZE * 2.5 +\r\n                        _this.canvasManager.STANDARD_ENEMY_SIZE;\r\n            }\r\n            var enemy = new Enemy(graphic, x, y, i, _this.enemyVecSetter, _this);\r\n            _this.enemiesList.push(enemy);\r\n        });\r\n    };\r\n    Game.prototype.displayPlayerDefault = function () {\r\n        this.canvasManager.displayObject(this.player.PLAYER_GRAPHIC, (this.canvasManager.getCanvasWidth() - this.player.PLAYER_WIDTH) /\r\n            2, this.canvasManager.getCanvasHeight() -\r\n            2.75 * this.canvasManager.FONTSIZE -\r\n            this.player.PLAYER_HEIGHT, this.player.PLAYER_HEIGHT, this.player.PLAYER_WIDTH);\r\n        this.player.x =\r\n            (this.canvasManager.getCanvasWidth() - this.player.PLAYER_WIDTH) /\r\n                2;\r\n    };\r\n    Game.prototype.displayPlayer = function () {\r\n        this.canvasManager.displayObject(this.player.PLAYER_GRAPHIC, this.player.x, this.canvasManager.getCanvasHeight() -\r\n            2.75 * this.canvasManager.FONTSIZE -\r\n            this.player.PLAYER_HEIGHT, this.player.PLAYER_HEIGHT, this.player.PLAYER_WIDTH);\r\n    };\r\n    Game.prototype.displayShields = function () {\r\n        this.canvasManager.displayObject(5, this.canvasManager.getCanvasWidth() * 0.2 - 50, this.canvasManager.getCanvasHeight() * 0.75, this.canvasManager.getCanvasHeight() * 0.1, this.canvasManager.getCanvasWidth() * 0.075);\r\n        this.canvasManager.displayObject(5, this.canvasManager.getCanvasWidth() * 0.4 - 50, this.canvasManager.getCanvasHeight() * 0.75, this.canvasManager.getCanvasHeight() * 0.1, this.canvasManager.getCanvasWidth() * 0.075);\r\n        this.canvasManager.displayObject(5, this.canvasManager.getCanvasWidth() * 0.6 - 50, this.canvasManager.getCanvasHeight() * 0.75, this.canvasManager.getCanvasHeight() * 0.1, this.canvasManager.getCanvasWidth() * 0.075);\r\n        this.canvasManager.displayObject(5, this.canvasManager.getCanvasWidth() * 0.8 - 50, this.canvasManager.getCanvasHeight() * 0.75, this.canvasManager.getCanvasHeight() * 0.1, this.canvasManager.getCanvasWidth() * 0.075);\r\n    };\r\n    Game.prototype.updateEnemies = function () {\r\n        for (var _i = 0, _a = this.enemiesList; _i < _a.length; _i++) {\r\n            var element = _a[_i];\r\n            element.updatePosition();\r\n            element.shoot();\r\n        }\r\n    };\r\n    Game.prototype.updateBullets = function () {\r\n        for (var _i = 0, _a = this.bulletList; _i < _a.length; _i++) {\r\n            var element = _a[_i];\r\n            this.canvasManager.clearZone(element.x, element.y, element.BULLET_WIDTH, element.BULLET_HEIGHT);\r\n            element.updatePosition();\r\n            this.canvasManager.displayObject(element.graphic, element.x, element.y, element.BULLET_HEIGHT, element.BULLET_WIDTH);\r\n        }\r\n    };\r\n    Game.prototype.updatePlayer = function () {\r\n        if (this.player.moveLeft &&\r\n            this.player.x - this.player.MOVE_VELOCITY >= 0) {\r\n            this.player.x -= this.player.MOVE_VELOCITY;\r\n        }\r\n        else if (this.player.moveRight &&\r\n            this.player.x +\r\n                this.player.MOVE_VELOCITY +\r\n                this.player.PLAYER_WIDTH <=\r\n                this.canvasManager.getCanvasWidth()) {\r\n            this.player.x += this.player.MOVE_VELOCITY;\r\n        }\r\n        // console.log(this.player.x);\r\n    };\r\n    Game.prototype.start = function (canvasManager) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.enemiesList = [];\r\n                        this.bulletList = [];\r\n                        this.canvasManager = canvasManager;\r\n                        if (!(this.counter == 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.canvasManager.loadAll()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.canvasManager.clearAlienZone();\r\n                        this.canvasManager.displayScore(this.score, this.highestScore);\r\n                        this.canvasManager.displayBottom(this.lives, true);\r\n                        this.setEnemiesList();\r\n                        this.displayEnemiesDefault();\r\n                        if (this.counter == 0) {\r\n                            this.player = new Player(this.canvasManager, this.audioManager, this);\r\n                        }\r\n                        this.displayPlayerDefault();\r\n                        this.displayShields();\r\n                        if (this.counter == 0) {\r\n                            document.addEventListener(\"keydown\", function (e) {\r\n                                if (_this.displayCounter == 50 &&\r\n                                    e.key == \"Enter\" &&\r\n                                    _this.isPlaying === false) {\r\n                                    _this.audioManager.restart(_this.audioPlayer2);\r\n                                    _this.audioManager.play(_this.audioPlayer2);\r\n                                    _this.isPlaying = true;\r\n                                    _this.RAF = requestAnimationFrame(function () { return _this.play(); });\r\n                                }\r\n                                else if (e.key == \"Backspace\" &&\r\n                                    _this.enemiesList.length == 0) {\r\n                                    _this.start(_this.canvasManager);\r\n                                }\r\n                            });\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Game.prototype.play = function () {\r\n        var _this = this;\r\n        this.updateEnemies();\r\n        this.updatePlayer();\r\n        this.canvasManager.clearAlienZone();\r\n        this.canvasManager.clearPlayerZone();\r\n        this.checkForWallCollision();\r\n        this.checkForEnemyCollision();\r\n        this.checkForRemoveableBulletsAndShieldCollision();\r\n        this.displayEnemies();\r\n        this.displayPlayer();\r\n        this.updateBullets();\r\n        this.checkForWin();\r\n        this.checkForDefeat();\r\n        if (this.isDefeat) {\r\n            cancelAnimationFrame(this.RAF);\r\n            if (this.score >= this.highestScore) {\r\n                this.highestScore = this.score;\r\n            }\r\n            this.canvasManager.displayDefeatScreen();\r\n            this.isDefeat = false;\r\n            this.isPlaying = false;\r\n            this.displayCounter = 0;\r\n            this.score = 0;\r\n            this.canvasManager.displayScore(this.score, this.highestScore);\r\n            this.lives = 3;\r\n            this.bulletList = [];\r\n            this.enemiesList = [];\r\n            this.counter++;\r\n            this.audioManager.pause(this.audioPlayer2);\r\n        }\r\n        else {\r\n            requestAnimationFrame(function () { return _this.play(); });\r\n        }\r\n    };\r\n    Game.prototype.checkForWallCollision = function () {\r\n        var _this = this;\r\n        if (this.enemiesList.some(function (element) {\r\n            return element.x + _this.canvasManager.STANDARD_ENEMY_SIZE >=\r\n                _this.canvasManager.getCanvasWidth();\r\n        })) {\r\n            this.enemiesList.forEach(function (element) {\r\n                (element.vector = -element.vector), element.pushDown();\r\n            });\r\n        }\r\n        else if (this.enemiesList.some(function (element) { return element.x <= 0; })) {\r\n            this.enemiesList.forEach(function (element) {\r\n                (element.vector = -element.vector), element.pushDown();\r\n            });\r\n        }\r\n    };\r\n    Game.prototype.checkForRemoveableBulletsAndShieldCollision = function () {\r\n        for (var _i = 0, _a = this.bulletList; _i < _a.length; _i++) {\r\n            var element = _a[_i];\r\n            if (element.y - element.BULLET_HEIGHT / 2 <=\r\n                this.canvasManager.getTextHeight(\"hi-score\") +\r\n                    this.canvasManager.getTextHeight(\"000\") ||\r\n                element.y >=\r\n                    this.canvasManager.getCanvasHeight() -\r\n                        this.canvasManager.FONTSIZE) {\r\n                this.canvasManager.clearZone(element.x, element.y, element.BULLET_WIDTH, element.BULLET_HEIGHT);\r\n                this.bulletList.splice(this.bulletList.indexOf(element), 1);\r\n            }\r\n            else if (element.y + element.BULLET_HEIGHT >=\r\n                this.canvasManager.getCanvasHeight() -\r\n                    2.75 * this.canvasManager.FONTSIZE) {\r\n                this.canvasManager.clearZone(element.x, element.y, element.BULLET_WIDTH, element.BULLET_HEIGHT);\r\n                this.bulletList.splice(this.bulletList.indexOf(element), 1);\r\n            }\r\n            else if (element.type === \"player\") {\r\n                var imageData = this.canvasManager.getImageData(element.x, element.y + element.vector - 1, element.BULLET_WIDTH, 1 - element.vector).data;\r\n                for (var i = 0; i < imageData.length; i += 4) {\r\n                    if (imageData[i + 1] == 252) {\r\n                        this.canvasManager.clearZone(element.x, element.y, element.BULLET_WIDTH, element.BULLET_HEIGHT);\r\n                        this.bulletList.splice(this.bulletList.indexOf(element), 1);\r\n                        var destroyableImageData = this.canvasManager.getImageData(element.x - 10, element.y + element.vector, 20, -3 * element.vector);\r\n                        for (var i_1 = 0; i_1 < destroyableImageData.data.length; i_1 += 4) {\r\n                            destroyableImageData.data[i_1] = 0;\r\n                            destroyableImageData.data[i_1 + 1] = 0;\r\n                            destroyableImageData.data[i_1 + 2] = 0;\r\n                            destroyableImageData.data[i_1 + 3] = 255;\r\n                        }\r\n                        this.canvasManager.putImageData(destroyableImageData, element.x - 10, element.y + element.vector * 3);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (element.type === \"enemy\") {\r\n                var imageData = this.canvasManager.getImageData(element.x, element.y + element.BULLET_HEIGHT + element.vector, element.BULLET_WIDTH, 1).data;\r\n                console.log(imageData.length / 4);\r\n                for (var i = 0; i < imageData.length; i += 4) {\r\n                    if (imageData[i + 1] == 252) {\r\n                        this.canvasManager.clearZone(element.x, element.y, element.BULLET_WIDTH, element.BULLET_HEIGHT);\r\n                        this.bulletList.splice(this.bulletList.indexOf(element), 1);\r\n                        var destroyableImageData = this.canvasManager.getImageData(element.x - 10, element.y +\r\n                            element.BULLET_HEIGHT +\r\n                            element.vector, 30, -3 * element.vector);\r\n                        for (var i_2 = 0; i_2 < destroyableImageData.data.length; i_2 += 4) {\r\n                            destroyableImageData.data[i_2] = 0;\r\n                            destroyableImageData.data[i_2 + 1] = 0;\r\n                            destroyableImageData.data[i_2 + 2] = 0;\r\n                            destroyableImageData.data[i_2 + 3] = 255;\r\n                        }\r\n                        this.canvasManager.putImageData(destroyableImageData, element.x - 10, element.y + element.vector * 3);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.checkForEnemyCollision = function () {\r\n        var _this = this;\r\n        for (var _i = 0, _a = this.bulletList; _i < _a.length; _i++) {\r\n            var bullet = _a[_i];\r\n            if (bullet.type === \"player\") {\r\n                for (var _b = 0, _c = this.enemiesList; _b < _c.length; _b++) {\r\n                    var enemy = _c[_b];\r\n                    if (bullet.x >= enemy.x &&\r\n                        bullet.x <=\r\n                            enemy.x + this.canvasManager.STANDARD_ENEMY_SIZE &&\r\n                        bullet.y - bullet.vector >= enemy.y &&\r\n                        bullet.y <=\r\n                            enemy.y + this.canvasManager.STANDARD_ENEMY_SIZE) {\r\n                        this.enemiesList.forEach(function (enemy) {\r\n                            if (enemy.vector < 0)\r\n                                enemy.vector -= _this.ENEMY_BOOST;\r\n                            else\r\n                                enemy.vector += _this.ENEMY_BOOST;\r\n                            enemy.shootProbabilty += 1;\r\n                            console.log(_this.enemyVecSetter);\r\n                        });\r\n                        this.enemiesList.splice(this.enemiesList.indexOf(enemy), 1);\r\n                        this.canvasManager.clearZone(enemy.x, enemy.y, this.canvasManager.STANDARD_ENEMY_SIZE, this.canvasManager.STANDARD_ENEMY_SIZE);\r\n                        this.canvasManager.displayObject(6, enemy.x, enemy.y, this.canvasManager.STANDARD_ENEMY_SIZE, this.canvasManager.STANDARD_ENEMY_SIZE);\r\n                        this.audioManager.play(this.audioPlayer1);\r\n                        this.bulletList.splice(this.bulletList.indexOf(bullet), 1);\r\n                        this.canvasManager.clearZone(bullet.x, bullet.y, bullet.BULLET_WIDTH, bullet.BULLET_HEIGHT);\r\n                        switch (enemy.graphic) {\r\n                            case 3:\r\n                                this.score += 30;\r\n                                break;\r\n                            case 2:\r\n                                this.score += 10;\r\n                                break;\r\n                            case 1:\r\n                                this.score += 20;\r\n                                break;\r\n                            case 0:\r\n                                this.score += 100;\r\n                                break;\r\n                        }\r\n                        this.canvasManager.displayScore(this.score, this.highestScore);\r\n                        this.enemyVecSetter += this.ENEMY_BOOST;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (bullet.type === \"enemy\") {\r\n                if (bullet.x >= this.player.x &&\r\n                    bullet.x <= this.player.x + this.player.PLAYER_WIDTH &&\r\n                    bullet.y >=\r\n                        this.canvasManager.getCanvasHeight() -\r\n                            2.75 * this.canvasManager.FONTSIZE -\r\n                            this.player.PLAYER_HEIGHT &&\r\n                    bullet.y <=\r\n                        this.canvasManager.getCanvasHeight() -\r\n                            2.75 * this.canvasManager.FONTSIZE) {\r\n                    this.lives--;\r\n                    if (this.lives <= 0) {\r\n                        this.isDefeat = true;\r\n                    }\r\n                    this.bulletList.splice(this.bulletList.indexOf(bullet), 1);\r\n                    this.canvasManager.clearZone(bullet.x, bullet.y, bullet.BULLET_WIDTH, bullet.BULLET_HEIGHT);\r\n                    this.canvasManager.displayBottom(this.lives);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.checkForDefeat = function () {\r\n        for (var _i = 0, _a = this.enemiesList; _i < _a.length; _i++) {\r\n            var enemy = _a[_i];\r\n            if (enemy.y + 25 >= this.canvasManager.getCanvasHeight() * 0.75) {\r\n                this.isPlaying = false;\r\n                this.isDefeat = true;\r\n            }\r\n        }\r\n    };\r\n    Game.prototype.checkForWin = function () {\r\n        if (this.enemiesList.length == 0) {\r\n            this.bulletList = [];\r\n            this.canvasManager.clearAlienZone();\r\n            this.setEnemiesList();\r\n            this.displayEnemiesDefault();\r\n        }\r\n    };\r\n    return Game;\r\n}());\r\nexport default Game;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import AudioManager from \"./utils/AudioManager\";\r\nimport CanvasManager from \"./utils/CanvasManager\";\r\nimport Game from './utils/Game';\r\nvar audioManager = new AudioManager();\r\nvar canvasManager = new CanvasManager();\r\nnew Game(canvasManager, audioManager);\r\n"],"names":[],"sourceRoot":""}